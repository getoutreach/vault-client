# yaml-language-server: $schema=https://app.opslevel.com/public/opslevel.schema.yml

# Available options are listed here: https://app.opslevel.com/account
# To find the alias for a given lifecycle: https://www.opslevel.com/docs/api/opslevel-yml/#finding-the-alias-for-a-lifecycle
# To find the alias for a given tier: https://www.opslevel.com/docs/api/opslevel-yml/#finding-the-alias-for-a-tier
# More examples: https://opslevel.com/docs/api/opslevel-yml/#example-service-opslevelyml

version: 1
service:
  name: vault-client
  product: Outreach
  owner: fnd-star
  language: Golang
  framework: stencil
  description: >
    Go Client for Vault
  lifecycle: public_ga
  ## <<Stencil::Block(extraServiceMetadata)>>

  ## <</Stencil::Block>>
  aliases:
    ## <<Stencil::Block(extraAliases)>>

    ## <</Stencil::Block>>
    - vault-client
  tags:
    ## <<Stencil::Block(extraTags)>>

    ## <</Stencil::Block>>
    - key: repo
      value: "https://github.com/getoutreach/vault-client"
    - key: reporting_team
      value: "fnd-star"
    - key: app
      value: "vault-client"
    - key: name
      value: "vault-client"
    - key: stencil_version
      value: "v1.35.0"
    - key: golang_version
      value: "1.19.8"
    - key: cli
      value: "false"
    - key: service
      value: "false"
      # This is necessary for filters in OpsLevel because we have to assume all things are
      # services if they don't have the `service` tag. So we can guarantee this tag for
      # bootstrapped CLIs/Libraries.
    - key: notservice
      value: "true"
  repositories:
    - name: getoutreach/vault-client
      path: "/"
      provider: github
